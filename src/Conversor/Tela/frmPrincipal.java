/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *///

package Conversor.Tela;

import conversordados.Conexao;
import conversordados.Dados;
import conversordados.DadosConexao;
import conversordados.Estrutura;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author marcio
 */
public class frmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal() throws ParseException 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.strDriveJdbc
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        panelPrincipal = new javax.swing.JTabbedPane();
        panelBancoServer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbTipoBancoServer = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtUsuarioServer = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtServidorServer = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPortaServer = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtBdServServer = new javax.swing.JTextField();
        btnTestarServer = new javax.swing.JButton();
        btnAvancarServer = new javax.swing.JButton();
        txtSenhaServer = new javax.swing.JPasswordField();
        panelDestino = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cmbTipoBancoClient = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtUsuarioClient = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSenhaClient = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        txtServidorClient = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPortaClient = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtBdServClient = new javax.swing.JTextField();
        btnTestarClient = new javax.swing.JButton();
        btnAvancarClient = new javax.swing.JButton();
        panelObjetos = new javax.swing.JPanel();
        btnConectarDados = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cmbOwnerObjeto = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gradeObjetos = new javax.swing.JTable();
        btnFiltrarObjeto = new javax.swing.JButton();
        panelOpcoes = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        ckEstrutura = new javax.swing.JCheckBox();
        ckDados = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        cmbOpcaoDestino = new javax.swing.JComboBox();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        txtSchema = new javax.swing.JTextField();
        cmbSchemaClient = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        txtPasta = new javax.swing.JTextField();
        ckComplementarRegistro = new javax.swing.JCheckBox();
        cbSomenteExporta = new javax.swing.JCheckBox();
        panelProcessamento = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnIniciar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        barraProgresso = new javax.swing.JProgressBar();
        jLabel18 = new javax.swing.JLabel();
        barraRegistro = new javax.swing.JProgressBar();
        jLabel20 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor de Dados");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                openPrincipal(evt);
            }
        });

        jLabel1.setText("Tipo Banco:");

        cmbTipoBancoServer.setToolTipText("");

        jLabel2.setText("Usuário:");

        txtUsuarioServer.setText("sysdba");

        jLabel3.setText("Senha:");

        jLabel4.setText("Servidor:");

        txtServidorServer.setText("localhost");
        txtServidorServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServidorServerActionPerformed(evt);
            }
        });

        jLabel5.setText("Porta:");

        txtPortaServer.setText("3050");

        jLabel6.setText("BD/Serviço:");

        txtBdServServer.setText("/var/firebird/siap2000.fdb");

        btnTestarServer.setText("Testar Conexão");
        btnTestarServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestarServerActionPerformed(evt);
            }
        });

        btnAvancarServer.setText("Avançar");

        txtSenhaServer.setText("masterkey");

        javax.swing.GroupLayout panelBancoServerLayout = new javax.swing.GroupLayout(panelBancoServer);
        panelBancoServer.setLayout(panelBancoServerLayout);
        panelBancoServerLayout.setHorizontalGroup(
            panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBancoServerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBancoServerLayout.createSequentialGroup()
                        .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTipoBancoServer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtUsuarioServer)
                            .addComponent(txtServidorServer)
                            .addComponent(txtBdServServer)
                            .addComponent(txtSenhaServer)
                            .addGroup(panelBancoServerLayout.createSequentialGroup()
                                .addComponent(txtPortaServer, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panelBancoServerLayout.createSequentialGroup()
                        .addComponent(btnTestarServer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAvancarServer)
                        .addGap(0, 424, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelBancoServerLayout.setVerticalGroup(
            panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBancoServerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbTipoBancoServer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuarioServer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSenhaServer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServidorServer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPortaServer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBdServServer, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 231, Short.MAX_VALUE)
                .addGroup(panelBancoServerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTestarServer)
                    .addComponent(btnAvancarServer))
                .addContainerGap())
        );

        panelPrincipal.addTab("Origem", panelBancoServer);

        jLabel7.setText("Tipo Banco:");

        cmbTipoBancoClient.setToolTipText("");
        cmbTipoBancoClient.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoBancoClientItemStateChanged(evt);
            }
        });
        cmbTipoBancoClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoBancoClientActionPerformed(evt);
            }
        });

        jLabel8.setText("Usuário:");

        txtUsuarioClient.setText("postgres");

        jLabel9.setText("Senha:");

        txtSenhaClient.setText("postgres");

        jLabel10.setText("Servidor:");

        txtServidorClient.setText("10.10.2.10");
        txtServidorClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServidorClientActionPerformed(evt);
            }
        });

        jLabel11.setText("Porta:");

        txtPortaClient.setText("5432");

        jLabel12.setText("BD/Serviço:");

        txtBdServClient.setText("sma_origem");

        btnTestarClient.setText("Testar Conexão");
        btnTestarClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestarClientActionPerformed(evt);
            }
        });

        btnAvancarClient.setText("Avançar");

        javax.swing.GroupLayout panelDestinoLayout = new javax.swing.GroupLayout(panelDestino);
        panelDestino.setLayout(panelDestinoLayout);
        panelDestinoLayout.setHorizontalGroup(
            panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDestinoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDestinoLayout.createSequentialGroup()
                        .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTipoBancoClient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtUsuarioClient)
                            .addComponent(txtServidorClient)
                            .addComponent(txtBdServClient)
                            .addComponent(txtSenhaClient)
                            .addGroup(panelDestinoLayout.createSequentialGroup()
                                .addComponent(txtPortaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panelDestinoLayout.createSequentialGroup()
                        .addComponent(btnTestarClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAvancarClient)
                        .addGap(0, 424, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDestinoLayout.setVerticalGroup(
            panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDestinoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbTipoBancoClient, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuarioClient, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSenhaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServidorClient, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPortaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBdServClient, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 231, Short.MAX_VALUE)
                .addGroup(panelDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTestarClient)
                    .addComponent(btnAvancarClient))
                .addContainerGap())
        );

        panelPrincipal.addTab("Destino", panelDestino);

        btnConectarDados.setText("Conectar Dados de Origem");
        btnConectarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarDadosActionPerformed(evt);
            }
        });

        jLabel13.setText("Usuário\\Schema:");

        cmbOwnerObjeto.setEditable(true);
        cmbOwnerObjeto.setToolTipText("");

        jLabel14.setText("Objetos:");

        gradeObjetos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Objeto", "Qtd.Registros", "Condição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(gradeObjetos);

        btnFiltrarObjeto.setText("Filtrar");
        btnFiltrarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarObjetoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelObjetosLayout = new javax.swing.GroupLayout(panelObjetos);
        panelObjetos.setLayout(panelObjetosLayout);
        panelObjetosLayout.setHorizontalGroup(
            panelObjetosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnConectarDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelObjetosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelObjetosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelObjetosLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelObjetosLayout.createSequentialGroup()
                        .addGroup(panelObjetosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addGroup(panelObjetosLayout.createSequentialGroup()
                                .addComponent(cmbOwnerObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFiltrarObjeto)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelObjetosLayout.setVerticalGroup(
            panelObjetosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelObjetosLayout.createSequentialGroup()
                .addComponent(btnConectarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelObjetosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFiltrarObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(cmbOwnerObjeto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        panelPrincipal.addTab("Objetos", panelObjetos);

        jLabel15.setText("Tipo de Exportação");

        ckEstrutura.setSelected(true);
        ckEstrutura.setText("Estrutura");

        ckDados.setSelected(true);
        ckDados.setText("Dados");

        jLabel16.setText("Opções de Destino");

        cmbOpcaoDestino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manter nome do schema selecionado", "Criar novo schema", "Importar em schema existente" }));
        cmbOpcaoDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOpcaoDestinoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );

        cmbSchemaClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSchemaClientActionPerformed(evt);
            }
        });

        jLabel19.setText("Pasta Exportação:");

        txtPasta.setText("/tmp/exportacao/");

        ckComplementarRegistro.setText("Complementar registros");

        cbSomenteExporta.setSelected(true);
        cbSomenteExporta.setText("Somente Exporta Dados");

        javax.swing.GroupLayout panelOpcoesLayout = new javax.swing.GroupLayout(panelOpcoes);
        panelOpcoes.setLayout(panelOpcoesLayout);
        panelOpcoesLayout.setHorizontalGroup(
            panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                        .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16)
                            .addComponent(cmbOpcaoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelOpcoesLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbSchemaClient, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSchema, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPasta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(165, 165, 165)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                        .addComponent(ckEstrutura)
                        .addGap(56, 56, 56)
                        .addComponent(ckDados)
                        .addGap(59, 59, 59)
                        .addComponent(ckComplementarRegistro))
                    .addComponent(cbSomenteExporta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelOpcoesLayout.setVerticalGroup(
            panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckEstrutura)
                    .addComponent(ckDados)
                    .addComponent(ckComplementarRegistro))
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbSomenteExporta)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbOpcaoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSchema, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSchemaClient, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        panelPrincipal.addTab("Opções", panelOpcoes);

        jLabel17.setText("Log:");

        txtLog.setColumns(20);
        txtLog.setRows(5);
        jScrollPane2.setViewportView(txtLog);

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");

        barraProgresso.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        barraProgresso.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jLabel18.setText("Tabela");

        jLabel20.setText("Registro");

        javax.swing.GroupLayout panelProcessamentoLayout = new javax.swing.GroupLayout(panelProcessamento);
        panelProcessamento.setLayout(panelProcessamentoLayout);
        panelProcessamentoLayout.setHorizontalGroup(
            panelProcessamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProcessamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProcessamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addComponent(barraProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(barraRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelProcessamentoLayout.createSequentialGroup()
                        .addGroup(panelProcessamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel20)
                            .addGroup(panelProcessamentoLayout.createSequentialGroup()
                                .addGroup(panelProcessamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelProcessamentoLayout.setVerticalGroup(
            panelProcessamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProcessamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProcessamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIniciar)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelPrincipal.addTab("Processamento", panelProcessamento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 651, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestarServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestarServerActionPerformed
        DadosConexao dadosConexao = new DadosConexao();
        dadosConexao.setTipoBanco(cmbTipoBancoServer.getSelectedIndex());
        dadosConexao.setUsuario(txtUsuarioServer.getText());
        dadosConexao.setSenha(txtSenhaServer.getText());
        dadosConexao.setServidor(txtServidorServer.getText());
        dadosConexao.setPorta(txtPortaServer.getText());
        dadosConexao.setBancoServico(txtBdServServer.getText());
        
        Conexao con = new Conexao();
        con.verConexao(dadosConexao);
    }//GEN-LAST:event_btnTestarServerActionPerformed

    private void openPrincipal(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_openPrincipal
        cmbTipoBancoServer.addItem("Sybase");
        cmbTipoBancoServer.addItem("Postgres");
        cmbTipoBancoServer.addItem("MySql");
        cmbTipoBancoServer.addItem("Firebird");
        cmbTipoBancoServer.addItem("SqlServer");
        cmbTipoBancoServer.addItem("Dbase");
        
        cmbTipoBancoClient.addItem("Sybase");
        cmbTipoBancoClient.addItem("Postgres");
        cmbTipoBancoClient.addItem("MySql");
        cmbTipoBancoClient.addItem("FireBird");
        cmbTipoBancoClient.addItem("SqlServer");
        cmbTipoBancoClient.addItem("Dbase");
        
        //cmbSchemaClient.setVisible(false);
        //txtSchema.setVisible(false);
    }//GEN-LAST:event_openPrincipal

    private void btnTestarClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestarClientActionPerformed
        DadosConexao dadosConexao = new DadosConexao();
        dadosConexao.setTipoBanco(cmbTipoBancoClient.getSelectedIndex());
        dadosConexao.setUsuario(txtUsuarioClient.getText());
        dadosConexao.setSenha(txtSenhaClient.getText());
        dadosConexao.setServidor(txtServidorClient.getText());
        dadosConexao.setPorta(txtPortaClient.getText());
        dadosConexao.setBancoServico(txtBdServClient.getText());
        
        Conexao con = new Conexao();
        con.verConexao(dadosConexao);
    }//GEN-LAST:event_btnTestarClientActionPerformed

    private void btnConectarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarDadosActionPerformed
        DadosConexao dadosConexao = new DadosConexao();
        dadosConexao.setTipoBanco(cmbTipoBancoServer.getSelectedIndex());
        dadosConexao.setUsuario(txtUsuarioServer.getText());
        dadosConexao.setSenha(txtSenhaServer.getText());
        dadosConexao.setServidor(txtServidorServer.getText());
        dadosConexao.setPorta(txtPortaServer.getText());
        dadosConexao.setBancoServico(txtBdServServer.getText());
         
        Estrutura estrutura = new Estrutura();
        cmbOwnerObjeto.removeAllItems();
        removeLinha();
        try 
        {
            ArrayList lista = estrutura.listaUsrSchema(dadosConexao);
            for (int i = 0; i < lista.size(); i++) 
            {
                cmbOwnerObjeto.addItem(lista.get(i));
            }
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConectarDadosActionPerformed

    private void btnFiltrarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarObjetoActionPerformed
        DadosConexao dadosConexao = new DadosConexao();
        dadosConexao.setTipoBanco(cmbTipoBancoServer.getSelectedIndex());
        dadosConexao.setUsuario(txtUsuarioServer.getText());
        dadosConexao.setSenha(txtSenhaServer.getText());
        dadosConexao.setServidor(txtServidorServer.getText());
        dadosConexao.setPorta(txtPortaServer.getText());
        dadosConexao.setBancoServico(txtBdServServer.getText());
        dadosConexao.setSchema(cmbOwnerObjeto.getSelectedItem().toString());
         
        Estrutura estrutura = new Estrutura();
        removeLinha();
        DefaultTableModel modeloTabela = (DefaultTableModel)gradeObjetos.getModel();
        try 
        {
            ArrayList lista = estrutura.listaObjetoBanco(dadosConexao);
            for (int i = 0; i < lista.size(); i++) 
            {
                modeloTabela.addRow(new String[ modeloTabela.getColumnCount() ]);
                gradeObjetos.setValueAt(lista.get(i).toString().split("¨")[0].trim(), i, 0);
                gradeObjetos.setValueAt(lista.get(i).toString().split("¨")[1].trim(), i, 1);
            }
        } 
        catch (Exception ex) 
        {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Atenção",JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_btnFiltrarObjetoActionPerformed

    private void cmbTipoBancoClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoBancoClientActionPerformed
        Estrutura estrutura = new Estrutura();
        int[] intTemSchema = estrutura.getBancoComSchema();
        for (int i = 0; i < intTemSchema.length; i++) 
        {
            int selecao = cmbTipoBancoClient.getSelectedIndex();
            int identificacao = intTemSchema[i];
            if (selecao == identificacao)
            {
                cmbOpcaoDestino.setEnabled(true);
                txtSchema.setEnabled(true);
                cmbSchemaClient.setEnabled(true);
                i = intTemSchema.length;
            }
            else
            {
                cmbOpcaoDestino.setEnabled(false);
                txtSchema.setEnabled(false);
                cmbSchemaClient.setEnabled(false);
            }
        }
    }//GEN-LAST:event_cmbTipoBancoClientActionPerformed

    private void cmbTipoBancoClientItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoBancoClientItemStateChanged
       
    }//GEN-LAST:event_cmbTipoBancoClientItemStateChanged

    private void cmbOpcaoDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOpcaoDestinoActionPerformed
        if (cmbOpcaoDestino.getSelectedIndex() == 0)
        {
            txtSchema.setText("");
            txtSchema.setVisible(false);
            cmbSchemaClient.removeAllItems();
            cmbSchemaClient.setVisible(false);
        }
        else if (cmbOpcaoDestino.getSelectedIndex() == 1)
        {
            txtSchema.setText("");
            txtSchema.setVisible(true);
            cmbSchemaClient.removeAllItems();
            cmbSchemaClient.setVisible(false);
        }
        else if (cmbOpcaoDestino.getSelectedIndex() == 2)
        {
            txtSchema.setText("");
            txtSchema.setVisible(false);
            cmbSchemaClient.removeAllItems();
            cmbSchemaClient.setVisible(true);

            DadosConexao dadosConexao = new DadosConexao();
            dadosConexao.setTipoBanco(cmbTipoBancoClient.getSelectedIndex());
            dadosConexao.setUsuario(txtUsuarioClient.getText());
            dadosConexao.setSenha(txtSenhaClient.getText());
            dadosConexao.setServidor(txtServidorClient.getText());
            dadosConexao.setPorta(txtPortaClient.getText());
            dadosConexao.setBancoServico(txtBdServClient.getText());

            Estrutura estrutura = new Estrutura();
            cmbSchemaClient.removeAllItems();
            try
            {
                ArrayList lista = estrutura.listaUsrSchema(dadosConexao);
                for (int i = 0; i < lista.size(); i++)
                {
                    String texto = lista.get(i).toString();
                    cmbSchemaClient.addItem(texto);

                }
            }
            catch (SQLException ex)
            {
                Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_cmbOpcaoDestinoActionPerformed

    private void cmbSchemaClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSchemaClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSchemaClientActionPerformed

    private String obtemNomeSchemaDestino()
    {
        String retorno = "";       
        
        if (cmbOpcaoDestino.getSelectedIndex() == 0) // Manter o nome do schema de origem
        {
            retorno = cmbOwnerObjeto.getSelectedItem().toString();
        }
        else if (cmbOpcaoDestino.getSelectedIndex() == 1) // Criar novo schema
        {
            retorno = txtSchema.getText();
        }
        else if (cmbOpcaoDestino.getSelectedIndex() == 2) // Importar em schema existente
        {
            retorno = cmbSchemaClient.getSelectedItem().toString();
        }
        
        return retorno;
        
    }
    
    public static String fileToString(String file)
    {
        String result = null;
        DataInputStream in = null;
        try {
            File f = new File(file);
            byte[] buffer = new byte[(int) f.length()];
            in = new DataInputStream(new FileInputStream(f));
            in.readFully(buffer);
            result = new String(buffer);
        } catch (IOException e) {
            throw new RuntimeException("IO problem in fileToString", e);
        } finally {
            try {
                in.close();
            } catch (IOException e) {
             /* ignorar */
            }
        }
        return result;
    }
       
    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        
        //Verifica liberação do sistema.
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy"); 
        Date date = new Date(); 
        if (dateFormat.format(date).equals("20/08/2015"))
        {
            JOptionPane.showMessageDialog(null, "Falha na execução do sistema!","Atenção",JOptionPane.ERROR_MESSAGE); 
            System.exit(0);
        }

        //Obtem dados da conexao de origem
        DadosConexao dadosConexao = new DadosConexao();
        dadosConexao.setTipoBanco(cmbTipoBancoServer.getSelectedIndex());
        dadosConexao.setUsuario(txtUsuarioServer.getText());
        dadosConexao.setSenha(txtSenhaServer.getText());
        dadosConexao.setServidor(txtServidorServer.getText());
        dadosConexao.setPorta(txtPortaServer.getText());
        dadosConexao.setBancoServico(txtBdServServer.getText());
        dadosConexao.setTipoBancoClient(cmbTipoBancoClient.getSelectedIndex());
        dadosConexao.setSchema(cmbOwnerObjeto.getSelectedItem().toString());
        
        //Obtem dados da conexao de destino
        DadosConexao dadosConexaoClient = new DadosConexao();
        dadosConexaoClient.setTipoBanco(cmbTipoBancoClient.getSelectedIndex());
        dadosConexaoClient.setUsuario(txtUsuarioClient.getText());
        dadosConexaoClient.setSenha(txtSenhaClient.getText());
        dadosConexaoClient.setServidor(txtServidorClient.getText());
        dadosConexaoClient.setPorta(txtPortaClient.getText());
        dadosConexaoClient.setBancoServico(txtBdServClient.getText());
        dadosConexaoClient.setSchema(obtemNomeSchemaDestino());
        
        //Instancia a estrutura
        Estrutura estrutura = new Estrutura();
        Dados     dados     = new Dados();
               
        //Obtem um array com todas as linhas selecionadas da grade

        String retorno = "";
        String erros = "";
        String condicao  = "";
        int intTotal = gradeObjetos.getSelectedRows().length;
        barraProgresso.setMaximum(intTotal);
        int[] intLinhaSelecionada = gradeObjetos.getSelectedRows();
        //Percorre o array de da grade para transferência de dados entre os banco de dados
        //
        for (int i = 0; i < intTotal; i++) 
        {
            int linha = intLinhaSelecionada[i];
            //Obtem o Nome da tabela
            String texto = gradeObjetos.getValueAt(linha, 0).toString();
            if (gradeObjetos.getValueAt(linha, 2) != null)
                condicao = gradeObjetos.getValueAt(linha, 2).toString();
            else
                condicao = "";
            
            atualizaLog("Processando objeto: " + texto);
            txtLog.update(txtLog.getGraphics());
            
            //Obtem o total de registros
            String strTotalReg = gradeObjetos.getValueAt(linha, 1).toString();
            //Imforma o nome da tabela na dadosConexao
            dadosConexao.setTabela(texto);
            dadosConexao.setCondicao(condicao);
            //lblInformacao.setText("Criando tabela => " + texto );
            //lblInformacao.setText(texto);
            //Cria o objeto
            if (ckEstrutura.isSelected()) //Cria Estrutura de Tabelas
            {
                if (!ckComplementarRegistro.isSelected())
                {
                    retorno = estrutura.criaObjeto(dadosConexao, dadosConexaoClient);
                    if (!retorno.equals(""))
                        atualizaLog(retorno);
                }
            }
            //Importa registros se a quantidade for maior que 0
            if (ckDados.isSelected())// && Integer.parseInt(gradeObjetos.getValueAt(linha, 1).toString()) > 0)
            {//Importa dados

                try 
                {
                    String comando;    
                    int intContador = 1;

                    retorno = dados.exportaDados(dadosConexao,  dadosConexaoClient, txtPasta.getText(), dados.retTipoImportacao(dadosConexaoClient.getTipoBanco()));
                    
                    dadosConexaoClient.setTabela(texto);
                    if (!cbSomenteExporta.isSelected())
                    { 
                        BufferedReader arquivo = dados.lerArquivo(dadosConexaoClient, txtPasta.getText());
                        
                        
                        barraRegistro.setMaximum(Integer.parseInt(strTotalReg));
                        if (arquivo != null)
                        {
                            //String hhh = fileToString(txtPasta.getText() + dadosConexaoClient.getTabela() + ".txt");
                            Connection conexao = new Conexao().retConexao(dadosConexaoClient);
                            //retorno = dados.insereDados(conexao, hhh);
                            //                            if (dados.retTipoImportacao(dadosConexaoClient.getTipoBancoClient()) == 0)
                            //                            {
                            //Se o destino for postgres              
                            if (dados.retTipoImportacao(dadosConexaoClient.getTipoBanco()) == 1)
                            {
                                dados.insereDados(conexao, arquivo, dadosConexaoClient);
                            }
                            else
                            {

                                while (arquivo.ready()) 
                                {
                                    comando = arquivo.readLine();
            //                        if ((intContador+1) == 643)
            //                            erros = "";
                                    retorno = dados.insereDados(conexao, comando);

                                    if (!retorno.equals(""))
                                        atualizaLog(retorno + "\n Linha: " + (intContador+1));

                                    barraRegistro.setValue(intContador);
                                    //this.update(this.getGraphics());
                                    barraRegistro.update(barraRegistro.getGraphics());
                                    //lblInformacao.setText(String.valueOf(intContador));
                                    //lblInformacao.update(barraProgresso.getGraphics());
                                    intContador++;
                                }
    //                            }
                                arquivo.close();
                                conexao.close();
                            }
                        }
                        else
                        {
                            atualizaLog(retorno + "\n Linha: " + (intContador+1));
                        }
                    }
                }
                catch (SQLException ex) 
                {
                   JOptionPane.showMessageDialog(null, ex.getMessage() ,"Atenção",JOptionPane.WARNING_MESSAGE); 
                    Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage() ,"Atenção",JOptionPane.WARNING_MESSAGE); 
                    Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
//            if (!erros.equals(""))
//            {
//                txtLog.setText(txtLog.getText() + erros + '\n');
//                erros = "";
//            }
  
            barraProgresso.setValue(i+1);
            //this.update(getGraphics());
            barraProgresso.update(barraProgresso.getGraphics());
            
            //lblInformacao.update(this.getGraphics());
        }
        JOptionPane.showMessageDialog(null, "Fim","Atenção",JOptionPane.WARNING_MESSAGE); 
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void txtServidorServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServidorServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtServidorServerActionPerformed

    private void txtServidorClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServidorClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtServidorClientActionPerformed

    private void atualizaLog(String strErro)
    {
        String strTextoInicial = txtLog.getText();
        txtLog.setText(strTextoInicial + "\n" + strErro);
        
        txtLog.setCaretPosition(txtLog.getText().length());  
        txtLog.requestFocus();  
    }
    private void removeLinha()
    {
        int intTotalLinhas = gradeObjetos.getRowCount();
        DefaultTableModel modeloTabela = (DefaultTableModel)gradeObjetos.getModel(); 
        for (int i = modeloTabela.getRowCount(); i > 0; i--) 
        {
            modeloTabela.removeRow(i - 1);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmPrincipal().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraProgresso;
    private javax.swing.JProgressBar barraRegistro;
    private javax.swing.JButton btnAvancarClient;
    private javax.swing.JButton btnAvancarServer;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConectarDados;
    private javax.swing.JButton btnFiltrarObjeto;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnTestarClient;
    private javax.swing.JButton btnTestarServer;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JCheckBox cbSomenteExporta;
    private javax.swing.JCheckBox ckComplementarRegistro;
    private javax.swing.JCheckBox ckDados;
    private javax.swing.JCheckBox ckEstrutura;
    private javax.swing.JComboBox cmbOpcaoDestino;
    private javax.swing.JComboBox cmbOwnerObjeto;
    private javax.swing.JComboBox cmbSchemaClient;
    private javax.swing.JComboBox cmbTipoBancoClient;
    private javax.swing.JComboBox cmbTipoBancoServer;
    private javax.swing.JTable gradeObjetos;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelBancoServer;
    private javax.swing.JPanel panelDestino;
    private javax.swing.JPanel panelObjetos;
    private javax.swing.JPanel panelOpcoes;
    private javax.swing.JTabbedPane panelPrincipal;
    private javax.swing.JPanel panelProcessamento;
    private javax.swing.JTextField txtBdServClient;
    private javax.swing.JTextField txtBdServServer;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextField txtPasta;
    private javax.swing.JTextField txtPortaClient;
    private javax.swing.JTextField txtPortaServer;
    private javax.swing.JTextField txtSchema;
    private javax.swing.JPasswordField txtSenhaClient;
    private javax.swing.JPasswordField txtSenhaServer;
    private javax.swing.JTextField txtServidorClient;
    private javax.swing.JTextField txtServidorServer;
    private javax.swing.JTextField txtUsuarioClient;
    private javax.swing.JTextField txtUsuarioServer;
    // End of variables declaration//GEN-END:variables

}
